{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractEventHandlers;\n/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\n\nfunction extractEventHandlers(object) {\n  let excludeKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (object === undefined) {\n    return {};\n  }\n\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/@mui/base/node/utils/extractEventHandlers.js"],"names":["Object","defineProperty","exports","value","default","extractEventHandlers","object","excludeKeys","undefined","result","keys","filter","prop","match","includes","forEach"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,oBAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,oBAAT,CAA8BC,MAA9B,EAAwD;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AACtD,MAAID,MAAM,KAAKE,SAAf,EAA0B;AACxB,WAAO,EAAP;AACD;;AAED,QAAMC,MAAM,GAAG,EAAf;AACAT,EAAAA,MAAM,CAACU,IAAP,CAAYJ,MAAZ,EAAoBK,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,KAAL,CAAW,UAAX,KAA0B,OAAOP,MAAM,CAACM,IAAD,CAAb,KAAwB,UAAlD,IAAgE,CAACL,WAAW,CAACO,QAAZ,CAAqBF,IAArB,CAApG,EAAgIG,OAAhI,CAAwIH,IAAI,IAAI;AAC9IH,IAAAA,MAAM,CAACG,IAAD,CAAN,GAAeN,MAAM,CAACM,IAAD,CAArB;AACD,GAFD;AAGA,SAAOH,MAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractEventHandlers;\n\n/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}"]},"metadata":{},"sourceType":"script"}