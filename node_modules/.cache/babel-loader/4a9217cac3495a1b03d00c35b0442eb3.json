{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js\";\n\nimport { ThemeProvider } from '@emotion/react';\nimport { Chip, createTheme } from '@mui/material';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nvar darkTheme = createTheme({\n  palette: {\n    mode: \"light\"\n  }\n});\n\nvar Genres = function Genres(_ref) {\n  var selectedGenres = _ref.selectedGenres,\n      setSelectedGenres = _ref.setSelectedGenres,\n      genres = _ref.genres,\n      setGenres = _ref.setGenres,\n      type = _ref.type,\n      setPage = _ref.setPage;\n\n  var fetchGenres = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://api.themoviedb.org/3/genre/\".concat(type, \"/list?api_key=\").concat(process.env.REACT_APP_API_KEY, \"&language=en-US\"));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setGenres(data.genres);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchGenres() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchGenres();\n    return function () {\n      setGenres({});\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"6px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, genres && genres.map(function (genre) {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: darkTheme,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: genre.name,\n      style: {\n        margin: 2\n      },\n      size: \"small\",\n      key: genre.id,\n      clickable: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  }));\n};\n\nexport default Genres;","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js"],"names":["ThemeProvider","Chip","createTheme","axios","React","useEffect","darkTheme","palette","mode","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","fetchGenres","get","process","env","REACT_APP_API_KEY","data","padding","map","genre","name","margin","id"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,eAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAE;AADF;AADkB,CAAD,CAA7B;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAOT;AAAA,MANFC,cAME,QANFA,cAME;AAAA,MALFC,iBAKE,QALFA,iBAKE;AAAA,MAJFC,MAIE,QAJFA,MAIE;AAAA,MAHFC,SAGE,QAHFA,SAGE;AAAA,MAFFC,IAEE,QAFFA,IAEE;AAAA,MADFC,OACE,QADFA,OACE;;AACF,MAAMC,WAAW;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOb,KAAK,CAACc,GAAN,8CACmBH,IADnB,2BACwCI,OAAO,CAACC,GAAR,CAAYC,iBADpD,qBADP;;AAAA;AAAA;AACRC,cAAAA,IADQ,oBACRA,IADQ;AAKhBR,cAAAA,SAAS,CAACQ,IAAI,CAACT,MAAN,CAAT;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXI,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAQAX,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,WAAW;AAEX,WAAO,YAAM;AACTH,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH,KAFD;AAGH,GANQ,EAMN,EANM,CAAT;AASF,sBACE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMV,MAAM,IAAIA,MAAM,CAACW,GAAP,CAAW,UAACC,KAAD;AAAA,wBACnB,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAElB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAEkB,KAAK,CAACC,IADjB;AAEI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,GAAG,EAAEF,KAAK,CAACG,EAJf;AAKI,MAAA,SAAS,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADmB;AAAA,GAAX,CADhB,CADF;AAeD,CAxCD;;AA0CA,eAAelB,MAAf","sourcesContent":["import { ThemeProvider } from '@emotion/react';\nimport { Chip, createTheme } from '@mui/material'\nimport axios from 'axios'\nimport React, { useEffect } from 'react'\n\nconst darkTheme = createTheme({\n    palette:{\n        mode: \"light\",\n    },\n});\n\nconst Genres = ({\n    selectedGenres,\n    setSelectedGenres,\n    genres,\n    setGenres,\n    type,\n    setPage,\n}) => {\n    const fetchGenres = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        )\n\n        setGenres(data.genres)\n    }\n\n    useEffect(() => {\n        fetchGenres();\n\n        return () => {\n            setGenres({});\n        }\n    }, [])\n    \n    \n  return (\n    <div style={{ padding: \"6px 0\" }}>\n        { genres && genres.map((genre) => (\n            <ThemeProvider theme={darkTheme}>\n                <Chip \n                    label={genre.name} \n                    style={{margin: 2}} \n                    size='small' \n                    key={genre.id}\n                    clickable \n                />\n            </ThemeProvider>\n        ))}\n    </div>\n  )\n}\n\nexport default Genres"]},"metadata":{},"sourceType":"module"}