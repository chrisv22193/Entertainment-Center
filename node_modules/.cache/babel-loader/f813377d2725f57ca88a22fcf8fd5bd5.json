{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js\";\n\nimport { Chip } from '@mui/material';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\n\nvar Genres = function Genres(_ref) {\n  var selectedGenres = _ref.selectedGenres,\n      setSelectedGenres = _ref.setSelectedGenres,\n      genres = _ref.genres,\n      setGenres = _ref.setGenres,\n      type = _ref.type,\n      setPage = _ref.setPage;\n\n  var handleAdd = function handleAdd(genre) {\n    setSelectedGenres([].concat(_toConsumableArray(selectedGenres), [genre]));\n    setGenres(genres.filter(function (g) {\n      return g.id !== genre.id;\n    }));\n    setPage(1);\n  };\n\n  var handleRemove = function handleRemove(genre) {\n    setSelectedGenres(selectedGenres.filter(function (selected) {\n      return selected.id !== genre.id;\n    }));\n    setGenres([].concat(_toConsumableArray(genres), [genre]));\n    setPage(1);\n  };\n\n  var fetchGenres = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://api.themoviedb.org/3/genre/\".concat(type, \"/list?api_key=\").concat(process.env.REACT_APP_API_KEY, \"&language=en-US\"));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setGenres(data.genres);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchGenres() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchGenres();\n    return function () {\n      setGenres({}); // unmounting\n    }; // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"6px 0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, selectedGenres?.map(function (genre) {\n    return /*#__PURE__*/React.createElement(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      key: genre.id,\n      color: \"primary\",\n      clickable: true,\n      size: \"small\",\n      onDelete: function onDelete() {\n        return handleRemove(genre);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    });\n  }), genres.map(function (genre) {\n    return /*#__PURE__*/React.createElement(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      key: genre.id,\n      clickable: true,\n      size: \"small\",\n      onClick: function onClick() {\n        return handleAdd(genre);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default Genres;","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js"],"names":["Chip","axios","React","useEffect","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","handleAdd","genre","filter","g","id","handleRemove","selected","fetchGenres","get","process","env","REACT_APP_API_KEY","data","padding","map","margin","name"],"mappings":"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","sourcesContent":["import { Chip } from '@mui/material'\nimport axios from 'axios'\nimport React, { useEffect } from 'react'\n\nconst Genres = ({\n    selectedGenres,\n    setSelectedGenres,\n    genres,\n    setGenres,\n    type,\n    setPage,\n  }) => {\n    const handleAdd = (genre) => {\n      setSelectedGenres([...selectedGenres, genre]);\n      setGenres(genres.filter((g) => g.id !== genre.id));\n      setPage(1);\n    };\n  \n    const handleRemove = (genre) => {\n      setSelectedGenres(\n        selectedGenres.filter((selected) => selected.id !== genre.id)\n      );\n      setGenres([...genres, genre]);\n      setPage(1);\n    };\n  \n    const fetchGenres = async () => {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n      );\n      setGenres(data.genres);\n    };\n  \n    useEffect(() => {\n      fetchGenres();\n  \n      return () => {\n        setGenres({}); // unmounting\n      };\n      // eslint-disable-next-line\n    }, []);\n  \n    return (\n      <div style={{ padding: \"6px 0\" }}>\n        {selectedGenres?.map((genre) => (\n          <Chip\n            style={{ margin: 2 }}\n            label={genre.name}\n            key={genre.id}\n            color=\"primary\"\n            clickable\n            size=\"small\"\n            onDelete={() => handleRemove(genre)}\n          />\n        ))}\n        {genres.map((genre) => (\n          <Chip\n            style={{ margin: 2 }}\n            label={genre.name}\n            key={genre.id}\n            clickable\n            size=\"small\"\n            onClick={() => handleAdd(genre)}\n          />\n        ))}\n      </div>\n    );\n  };\n  \n  export default Genres;"]},"metadata":{},"sourceType":"module"}