{"ast":null,"code":"var _jsxFileName = \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/Pages/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport { Button, createTheme, Tab, Tabs, TextField, ThemeProvider } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport axios from 'axios';\nimport SingleContent from '../../components/SingleContent/SingleContent';\nimport CustomPagination from '../../components/Pagination/CustomPagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [type, setType] = useState(0);\n  const [page, setPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [content, setContent] = useState();\n  const [numOfPages, setNumOfPages] = useState();\n  const darkTheme = createTheme({\n    palette: {\n      mode: \"dark\",\n      primary: {\n        main: \"#fff\"\n      }\n    }\n  });\n  useEffect(() => {\n    const fetchSearch = async () => {\n      const {\n        data\n      } = await axios.get(`https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${searchText}&page=${page}&include_adult=false`);\n      setContent(data.results);\n      setNumOfPages(data.total_pages);\n    };\n\n    window.scroll(0, 0);\n    fetchSearch();\n  }, [type, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          margin: \"15px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            flex: 1\n          },\n          className: \"searchBox\",\n          label: \"Search\",\n          variant: \"filled\",\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            marginLeft: 10\n          },\n          onClick: fetchSearch,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: type,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        onChange: (event, newValue) => {\n          setType(newValue);\n          setPage(1);\n        },\n        style: {\n          paddingBottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"50%\"\n          },\n          label: \"Search Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            width: \"50%\"\n          },\n          label: \"Search TV Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: type ? \"tv\" : \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)), searchText && !content && (type ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Series Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 48\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"VKAFC94Q/4ztpZmI6QpLEduX1i8=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/Pages/Search/Search.js"],"names":["Button","createTheme","Tab","Tabs","TextField","ThemeProvider","React","useEffect","useState","SearchIcon","axios","SingleContent","CustomPagination","Search","type","setType","page","setPage","searchText","setSearchText","content","setContent","numOfPages","setNumOfPages","darkTheme","palette","mode","primary","main","fetchSearch","data","get","process","env","REACT_APP_API_KEY","results","total_pages","window","scroll","display","margin","flex","e","target","value","marginLeft","event","newValue","paddingBottom","width","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":"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","sourcesContent":["import { Button, createTheme, Tab, Tabs, TextField, ThemeProvider } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport SearchIcon from \"@mui/icons-material/Search\"\nimport axios from 'axios'\nimport SingleContent from '../../components/SingleContent/SingleContent'\nimport CustomPagination from '../../components/Pagination/CustomPagination'\n\nconst Search = () => {\n\n  const [type, setType] = useState(0)\n  const [page, setPage] = useState(1)\n  const [searchText, setSearchText] = useState(\"\")\n  const [content, setContent] = useState()\n  const [numOfPages, setNumOfPages] = useState()\n\n  const darkTheme = createTheme({\n    palette:{\n      mode: \"dark\",\n      primary:{\n        main: \"#fff\",\n      }\n    }\n  })\n\n  useEffect(() => {\n    const fetchSearch = async () => {\n      const { data } = await axios.get(\n        `https://api.themoviedb.org/3/search/${type ? \"tv\" : \"movie\"}?api_key=${process.env.REACT_APP_API_KEY }&language=en-US&query=${searchText}&page=${page}&include_adult=false`\n      )\n      setContent(data.results)\n      setNumOfPages(data.total_pages)\n    }\n    window.scroll(0,0)\n    fetchSearch()\n  }, [type, page])\n  \n\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div style={{display: \"flex\", margin: \"15px 0\"}}>\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button \n            variant='contained' \n            style={{marginLeft: 10}} \n            onClick={fetchSearch}> \n            <SearchIcon/> \n          </Button>\n        </div>\n\n        <Tabs \n          value={type} \n          indicatorColor='primary' \n          textColor='primary'\n          onChange={(event, newValue) => {\n            setType(newValue)\n            setPage(1)\n          }}\n          style={{ paddingBottom: 5 }}\n          >\n          <Tab style={{ width: \"50%\" }} label=\"Search Movies\"/>\n          <Tab style={{ width: \"50%\" }} label=\"Search TV Series\"/>\n        </Tabs>\n\n      </ThemeProvider>\n        <div className='trending'>\n          { content && content.map((c) => (\n            <SingleContent \n              key={c.id} \n              id={c.id} \n              poster={c.poster_path} \n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date} \n              media_type={type ? \"tv\" : \"movie\"}\n              vote_average={c.vote_average}\n              />\n          ))}\n          {searchText &&\n            !content &&\n            (type ? <h2>No Series Found</h2> : <h2>No Movies Found</h2>)\n          }\n        </div>\n        {numOfPages > 1 &&(\n          <CustomPagination setPage={setPage} numOfPages={numOfPages} /> \n        )}\n    </div>\n  )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}