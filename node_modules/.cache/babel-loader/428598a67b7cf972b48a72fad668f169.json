{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = composeClasses;\n\nfunction composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/@mui/base/node/composeClasses/composeClasses.js"],"names":["Object","defineProperty","exports","value","default","composeClasses","slots","getUtilityClass","classes","output","keys","forEach","slot","reduce","acc","key","push","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,eAA/B,EAAgDC,OAAhD,EAAyD;AACvD,QAAMC,MAAM,GAAG,EAAf;AACAT,EAAAA,MAAM,CAACU,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,EAA4B;AAC5B;AACAC,EAAAA,IAAI,IAAI;AACNH,IAAAA,MAAM,CAACG,IAAD,CAAN,GAAeN,KAAK,CAACM,IAAD,CAAL,CAAYC,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9C,UAAIA,GAAJ,EAAS;AACP,YAAIP,OAAO,IAAIA,OAAO,CAACO,GAAD,CAAtB,EAA6B;AAC3BD,UAAAA,GAAG,CAACE,IAAJ,CAASR,OAAO,CAACO,GAAD,CAAhB;AACD;;AAEDD,QAAAA,GAAG,CAACE,IAAJ,CAAST,eAAe,CAACQ,GAAD,CAAxB;AACD;;AAED,aAAOD,GAAP;AACD,KAVc,EAUZ,EAVY,EAURG,IAVQ,CAUH,GAVG,CAAf;AAWD,GAdD;AAeA,SAAOR,MAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = composeClasses;\n\nfunction composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}"]},"metadata":{},"sourceType":"script"}