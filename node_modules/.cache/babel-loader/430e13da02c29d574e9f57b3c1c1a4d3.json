{"ast":null,"code":"var _jsxFileName = \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/Pages/Movies/Movies.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Genres from '../../components/Genres';\nimport CustomPagination from '../../components/Pagination/CustomPagination';\nimport SingleContent from '../../components/SingleContent/SingleContent';\nimport useGenre from '../../Hooks/useGenre';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [seletedGenres, setSeletedGenres] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const genreforURL = useGenre(seletedGenres);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_watch_monetization_types=flatrate&with&with_genres=${genreforURL}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, [page, genreforURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"filterText\",\n      style: {\n        padding: 5\n      },\n      children: \"Filter by genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"movie\",\n      selectedGenres: seletedGenres,\n      setSelectedGenres: setSeletedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"YIWXCowqob0+kOqD3+ZaTySaPrA=\", false, function () {\n  return [useGenre];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/Pages/Movies/Movies.js"],"names":["axios","React","useEffect","useState","Genres","CustomPagination","SingleContent","useGenre","Movies","page","setPage","content","setContent","numOfPages","setNumOfPages","seletedGenres","setSeletedGenres","genres","setGenres","genreforURL","fetchMovies","data","get","process","env","REACT_APP_API_KEY","results","total_pages","padding","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA5C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMgB,WAAW,GAAGZ,QAAQ,CAACQ,aAAD,CAA5B;;AAEA,QAAMK,WAAW,GAAC,YAAY;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMrB,KAAK,CAACsB,GAAN,CACpB,uDAAsDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,wFAAuFhB,IAAK,4DAA2DU,WAAY,EADnO,CAAvB;AAICP,IAAAA,UAAU,CAACS,IAAI,CAACK,OAAN,CAAV;AACAZ,IAAAA,aAAa,CAACO,IAAI,CAACM,WAAN,CAAb;AACH,GAPD;;AASFzB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACX,IAAD,EAAOU,WAAP,CAFM,CAAT;AAKE,sBACE;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,KAAK,EAAE;AAACS,QAAAA,OAAO,EAAE;AAAV,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,cAAc,EAAEb,aAFlB;AAGE,MAAA,iBAAiB,EAAEC,gBAHrB;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,SAAS,EAAEC,SALb;AAME,MAAA,OAAO,EAAER;AANX;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACIC,OAAO,IAAIA,OAAO,CAACkB,GAAR,CAAaC,CAAD,iBACvB,QAAC,aAAD;AAEE,QAAA,EAAE,EAAEA,CAAC,CAACC,EAFR;AAGE,QAAA,MAAM,EAAED,CAAC,CAACE,WAHZ;AAIE,QAAA,KAAK,EAAEF,CAAC,CAACG,KAAF,IAAWH,CAAC,CAACI,IAJtB;AAKE,QAAA,IAAI,EAAEJ,CAAC,CAACK,cAAF,IAAoBL,CAAC,CAACM,YAL9B;AAME,QAAA,UAAU,EAAC,OANb;AAOE,QAAA,YAAY,EAAEN,CAAC,CAACO;AAPlB,SACOP,CAAC,CAACC,EADT;AAAA;AAAA;AAAA;AAAA,cADW;AADf;AAAA;AAAA;AAAA;AAAA,YAXJ,EAwBKlB,UAAU,GAAG,CAAb,iBACC,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEH,OAA3B;AAAoC,MAAA,UAAU,EAAEG;AAAhD;AAAA;AAAA;AAAA;AAAA,YAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CArDD;;GAAML,M;UAOgBD,Q;;;KAPhBC,M;AAuDN,eAAeA,MAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport Genres from '../../components/Genres';\nimport CustomPagination from '../../components/Pagination/CustomPagination';\nimport SingleContent from '../../components/SingleContent/SingleContent';\nimport useGenre from '../../Hooks/useGenre';\n\nconst Movies = () => {\n\n  const [page, setPage] = useState(1)\n  const [content, setContent] = useState([])\n  const [numOfPages, setNumOfPages] = useState()\n  const [seletedGenres, setSeletedGenres] = useState([])\n  const [genres, setGenres] = useState([])\n  const genreforURL = useGenre(seletedGenres)\n\n  const fetchMovies=async () => {\n     const { data } = await axios.get(\n       `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_watch_monetization_types=flatrate&with&with_genres=${genreforURL}`\n      );\n\n      setContent(data.results)\n      setNumOfPages(data.total_pages)\n  };\n\nuseEffect(() => {\n  fetchMovies()\n}, [page, genreforURL]);\n\n\n  return (\n    <div>\n        <span className='pageTitle'>Movies</span>\n        <span className='filterText' style={{padding: 5}}>Filter by genre</span>\n        <Genres\n          type=\"movie\"\n          selectedGenres={seletedGenres}\n          setSelectedGenres={setSeletedGenres}\n          genres={genres}\n          setGenres={setGenres}\n          setPage={setPage}\n        />\n        <div className='trending'>\n          { content && content.map((c) => (\n            <SingleContent \n              key={c.id} \n              id={c.id} \n              poster={c.poster_path} \n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date} \n              media_type=\"movie\"\n              vote_average={c.vote_average}\n              />\n          ))}\n        </div>\n        {numOfPages > 1 &&(\n          <CustomPagination setPage={setPage} numOfPages={numOfPages} /> \n        )}\n    </div>\n  );\n};\n\nexport default Movies"]},"metadata":{},"sourceType":"module"}