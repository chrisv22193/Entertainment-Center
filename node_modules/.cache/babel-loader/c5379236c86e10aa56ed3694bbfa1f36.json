{"ast":null,"code":"var _jsxFileName = \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js\",\n    _s = $RefreshSig$();\n\nimport { Chip } from '@mui/material';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genres = _ref => {\n  _s();\n\n  let {\n    selectedGenres,\n    setSelectedGenres,\n    genres,\n    setGenres,\n    type,\n    setPage\n  } = _ref;\n\n  const handleAdd = genre => {\n    setSelectedGenres([...selectedGenres, genre]);\n    setGenres(genres.filter(g => g.id !== genre.id));\n    setPage(1);\n  };\n\n  const handleRemove = genre => {\n    setSelectedGenres(selectedGenres.filter(selected => selected.id !== genre.id));\n    setGenres([...genres, genre]);\n    setPage(1);\n  };\n\n  const fetchGenres = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n    setGenres(data.genres);\n  };\n\n  useEffect(() => {\n    fetchGenres();\n    return () => {\n      setGenres({});\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ontWeight: \"bold\"\n    },\n    children: [selectedGenres && selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      label: genre.name,\n      style: {\n        margin: 2\n      },\n      size: \"small\",\n      color: \"secondary\",\n      clickable: true,\n      onDelete: () => handleRemove(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)), genres && genres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      label: genre.name,\n      style: {\n        margin: 2,\n        background: 'white'\n      },\n      size: \"small\",\n      clickable: true,\n      onClick: () => handleAdd(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Genres, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genres;\nexport default Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js"],"names":["Chip","axios","React","useEffect","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","handleAdd","genre","filter","g","id","handleRemove","selected","fetchGenres","data","get","process","env","REACT_APP_API_KEY","ontWeight","map","name","margin","background"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,MAAM,GAAG,QAOT;AAAA;;AAAA,MAPU;AACZC,IAAAA,cADY;AAEZC,IAAAA,iBAFY;AAGZC,IAAAA,MAHY;AAIZC,IAAAA,SAJY;AAKZC,IAAAA,IALY;AAMZC,IAAAA;AANY,GAOV;;AAEF,QAAMC,SAAS,GAAIC,KAAD,IAAW;AACzBN,IAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBO,KAApB,CAAD,CAAjB;AACAJ,IAAAA,SAAS,CAACD,MAAM,CAACM,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,KAAK,CAACG,EAApC,CAAD,CAAT;AACAL,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAJD;;AAKA,QAAMM,YAAY,GAAIJ,KAAD,IAAW;AAC5BN,IAAAA,iBAAiB,CACbD,cAAc,CAACQ,MAAf,CAAuBI,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBH,KAAK,CAACG,EAA1D,CADa,CAAjB;AAGAP,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYK,KAAZ,CAAD,CAAT;AACAF,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAND;;AAQA,QAAMQ,WAAW,GAAG,YAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAClB,sCAAqCX,IAAK,iBAAgBY,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBADtE,CAAvB;AAIAf,IAAAA,SAAS,CAACW,IAAI,CAACZ,MAAN,CAAT;AACH,GAND;;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW;AACX,WAAO,MAAM;AACTV,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH,KAFD,CAFY,CAKZ;AACH,GANQ,EAMN,EANM,CAAT;AASF,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,eACMnB,cAAc,IACZA,cAAc,CAACoB,GAAf,CAAoBb,KAAD,iBACf,QAAC,IAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACc,IADjB;AAEI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,KAAK,EAAC,WAJV;AAMI,MAAA,SAAS,MANb;AAOI,MAAA,QAAQ,EAAE,MAAMX,YAAY,CAACJ,KAAD;AAPhC,OAKSA,KAAK,CAACG,EALf;AAAA;AAAA;AAAA;AAAA,YADJ,CAFR,EAaMR,MAAM,IACJA,MAAM,CAACkB,GAAP,CAAYb,KAAD,iBACP,QAAC,IAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACc,IADjB;AAEI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,CAAT;AAAYC,QAAAA,UAAU,EAAE;AAAxB,OAFX;AAGI,MAAA,IAAI,EAAC,OAHT;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,OAAO,EAAE,MAAMjB,SAAS,CAACC,KAAD;AAN5B,OAISA,KAAK,CAACG,EAJf;AAAA;AAAA;AAAA;AAAA,YADJ,CAdR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAlED;;GAAMX,M;;KAAAA,M;AAoEN,eAAeA,MAAf","sourcesContent":["import { Chip } from '@mui/material'\nimport axios from 'axios'\nimport React, { useEffect } from 'react'\n\nconst Genres = ({\n    selectedGenres,\n    setSelectedGenres,\n    genres,\n    setGenres,\n    type,\n    setPage,\n}) => {\n\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres.filter((g) => g.id !== genre.id));\n        setPage(1);\n    };\n    const handleRemove = (genre) => {\n        setSelectedGenres(\n            selectedGenres.filter((selected) => selected.id !== genre.id)\n        )\n        setGenres([...genres, genre])\n        setPage(1)\n    }\n\n    const fetchGenres = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        )\n\n        setGenres(data.genres)\n    }\n\n    useEffect(() => {\n        fetchGenres();\n        return () => {\n            setGenres({});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    \n  return (\n    <div style={{ ontWeight: \"bold\" }}>\n        { selectedGenres && \n            selectedGenres.map((genre) => (\n                <Chip \n                    label={genre.name} \n                    style={{margin: 2}} \n                    size='small' \n                    color='secondary'\n                    key={genre.id}\n                    clickable\n                    onDelete={() => handleRemove(genre)}\n                />\n        ))}\n        { genres && \n            genres.map((genre) => (\n                <Chip \n                    label={genre.name} \n                    style={{margin: 2, background: 'white'}} \n                    size='small' \n                    key={genre.id}\n                    clickable\n                    onClick={() => handleAdd(genre)}\n                />\n        ))}\n    </div>\n  )\n}\n\nexport default Genres"]},"metadata":{},"sourceType":"module"}