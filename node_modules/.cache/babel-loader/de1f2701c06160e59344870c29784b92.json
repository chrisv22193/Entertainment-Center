{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useListbox;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _useListbox = require(\"./useListbox.types\");\n\nvar _defaultListboxReducer = _interopRequireDefault(require(\"./defaultListboxReducer\"));\n\nvar _useControllableReducer = _interopRequireDefault(require(\"./useControllableReducer\"));\n\nvar _areArraysEqual = _interopRequireDefault(require(\"../utils/areArraysEqual\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar defaultOptionComparer = function defaultOptionComparer(optionA, optionB) {\n  return optionA === optionB;\n};\n\nfunction useListbox(props) {\n  var _props$optionIdGenera, _options$highlightedI;\n\n  var _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      idProp = props.id,\n      options = props.options,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$isOptionDisabl = props.isOptionDisabled,\n      isOptionDisabled = _props$isOptionDisabl === void 0 ? function () {\n    return false;\n  } : _props$isOptionDisabl,\n      _props$optionComparer = props.optionComparer,\n      optionComparer = _props$optionComparer === void 0 ? defaultOptionComparer : _props$optionComparer,\n      externalReducer = props.stateReducer,\n      externalListboxRef = props.listboxRef;\n  var id = (0, _utils.unstable_useId)(idProp);\n\n  function defaultIdGenerator(_, index) {\n    return \"\".concat(id, \"-option-\").concat(index);\n  }\n\n  var optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  var propsWithDefaults = (0, _extends2.default)({}, props, {\n    disableListWrap: disableListWrap,\n    disabledItemsFocusable: disabledItemsFocusable,\n    isOptionDisabled: isOptionDisabled,\n    multiple: multiple,\n    optionComparer: optionComparer\n  });\n  var listboxRef = React.useRef(null);\n  var handleRef = (0, _utils.unstable_useForkRef)(externalListboxRef, listboxRef);\n\n  var _ref2 = (0, _useControllableReducer.default)(_defaultListboxReducer.default, externalReducer, propsWithDefaults),\n      _ref3 = _slicedToArray(_ref2, 2),\n      _ref3$ = _ref3[0],\n      highlightedIndex = _ref3$.highlightedIndex,\n      selectedValue = _ref3$.selectedValue,\n      dispatch = _ref3[1];\n\n  var previousOptions = React.useRef([]);\n  React.useEffect(function () {\n    if ((0, _areArraysEqual.default)(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n\n    dispatch({\n      type: _useListbox.ActionTypes.optionsChange,\n      options: options,\n      previousOptions: previousOptions.current,\n      props: propsWithDefaults\n    });\n    previousOptions.current = options; // No need to re-run this effect if props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, optionComparer, dispatch]);\n\n  var createHandleOptionClick = function createHandleOptionClick(option, other) {\n    return function (event) {\n      var _other$onClick;\n\n      (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      event.preventDefault();\n      dispatch({\n        type: _useListbox.ActionTypes.optionClick,\n        option: option,\n        event: event,\n        props: propsWithDefaults\n      });\n    };\n  };\n\n  var createHandleKeyDown = function createHandleKeyDown(other) {\n    return function (event) {\n      var _other$onKeyDown;\n\n      (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      var keysToPreventDefault = [' ', 'Enter', 'ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n\n      if (keysToPreventDefault.includes(event.key)) {\n        event.preventDefault();\n      }\n\n      dispatch({\n        type: _useListbox.ActionTypes.keyDown,\n        event: event,\n        props: propsWithDefaults\n      });\n    };\n  };\n\n  var createHandleBlur = function createHandleBlur(other) {\n    return function (event) {\n      var _other$onBlur, _listboxRef$current;\n\n      (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n        // focus is within the listbox\n        return;\n      }\n\n      dispatch({\n        type: _useListbox.ActionTypes.blur,\n        event: event,\n        props: propsWithDefaults\n      });\n    };\n  };\n\n  var getRootProps = function getRootProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return (0, _extends2.default)({}, otherHandlers, {\n      'aria-activedescendant': highlightedIndex >= 0 ? optionIdGenerator(options[highlightedIndex], highlightedIndex) : undefined,\n      id: id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: 0,\n      ref: handleRef\n    });\n  };\n\n  var getOptionState = function getOptionState(option) {\n    var selected;\n    var index = options.findIndex(function (opt) {\n      return optionComparer(opt, option);\n    });\n\n    if (multiple) {\n      var _ref;\n\n      selected = ((_ref = selectedValue) != null ? _ref : []).some(function (value) {\n        return value != null && optionComparer(option, value);\n      });\n    } else {\n      selected = optionComparer(option, selectedValue);\n    }\n\n    var disabled = isOptionDisabled(option, index);\n    return {\n      selected: selected,\n      disabled: disabled,\n      highlighted: highlightedIndex === index\n    };\n  };\n\n  var getOptionProps = function getOptionProps(option) {\n    var otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _getOptionState = getOptionState(option),\n        selected = _getOptionState.selected,\n        disabled = _getOptionState.disabled;\n\n    var index = options.findIndex(function (opt) {\n      return optionComparer(opt, option);\n    });\n    return (0, _extends2.default)({}, otherHandlers, {\n      'aria-disabled': disabled || undefined,\n      'aria-selected': selected,\n      id: optionIdGenerator(option, index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      role: 'option'\n    });\n  };\n\n  return {\n    getRootProps: getRootProps,\n    getOptionProps: getOptionProps,\n    getOptionState: getOptionState,\n    selectedOption: selectedValue,\n    highlightedOption: (_options$highlightedI = options[highlightedIndex]) != null ? _options$highlightedI : null\n  };\n}","map":null,"metadata":{},"sourceType":"script"}