{"ast":null,"code":"import _asyncToGenerator from\"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/@babel/runtime/regenerator/index.js\";import{Chip}from'@mui/material';import axios from'axios';import React,{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Genres=function Genres(_ref){var selectedGenres=_ref.selectedGenres,setSelectedGenres=_ref.setSelectedGenres,genres=_ref.genres,setGenres=_ref.setGenres,type=_ref.type,setPage=_ref.setPage;var handleAdd=function handleAdd(genre){setSelectedGenres([].concat(_toConsumableArray(selectedGenres),[genre]));setGenres(genres.filter(function(g){return g.id!==genre.id;}));setPage(1);};var handleRemove=function handleRemove(genre){setSelectedGenres(selectedGenres.filter(function(selected){return selected.id!==genre.id;}));setGenres([].concat(_toConsumableArray(genres),[genre]));setPage(1);};var fetchGenres=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://api.themoviedb.org/3/genre/\".concat(type,\"/list?api_key=\").concat(process.env.REACT_APP_API_KEY,\"&language=en-US\"));case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setGenres(data.genres);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchGenres(){return _ref2.apply(this,arguments);};}();useEffect(function(){fetchGenres();return function(){setGenres({});};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"6px 0\",fontWeight:\"bold\"},children:[selectedGenres&&selectedGenres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{label:genre.name,style:{margin:2},size:\"small\",color:\"secondary\",clickable:true,onDelete:function onDelete(){return handleRemove(genre);}},genre.id);}),genres&&genres.map(function(genre){return/*#__PURE__*/_jsx(Chip,{label:genre.name,style:{margin:2,background:'white'},size:\"small\",clickable:true,onClick:function onClick(){return handleAdd(genre);}},genre.id);})]});};export default Genres;","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/components/Genres.js"],"names":["Chip","axios","React","useEffect","Genres","selectedGenres","setSelectedGenres","genres","setGenres","type","setPage","handleAdd","genre","filter","g","id","handleRemove","selected","fetchGenres","get","process","env","REACT_APP_API_KEY","data","padding","fontWeight","map","name","margin","background"],"mappings":"wbAAA,OAASA,IAAT,KAAqB,eAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAOT,IANFC,CAAAA,cAME,MANFA,cAME,CALFC,iBAKE,MALFA,iBAKE,CAJFC,MAIE,MAJFA,MAIE,CAHFC,SAGE,MAHFA,SAGE,CAFFC,IAEE,MAFFA,IAEE,CADFC,OACE,MADFA,OACE,CAEF,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBN,iBAAiB,8BAAKD,cAAL,GAAqBO,KAArB,GAAjB,CACAJ,SAAS,CAACD,MAAM,CAACM,MAAP,CAAc,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,EAAF,GAASH,KAAK,CAACG,EAAtB,EAAd,CAAD,CAAT,CACAL,OAAO,CAAC,CAAD,CAAP,CACH,CAJD,CAKA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAW,CAC5BN,iBAAiB,CACbD,cAAc,CAACQ,MAAf,CAAsB,SAACI,QAAD,QAAcA,CAAAA,QAAQ,CAACF,EAAT,GAAgBH,KAAK,CAACG,EAApC,EAAtB,CADa,CAAjB,CAGAP,SAAS,8BAAKD,MAAL,GAAaK,KAAb,GAAT,CACAF,OAAO,CAAC,CAAD,CAAP,CACH,CAND,CAQA,GAAMQ,CAAAA,WAAW,2FAAG,mLACOjB,CAAAA,KAAK,CAACkB,GAAN,8CACmBV,IADnB,0BACwCW,OAAO,CAACC,GAAR,CAAYC,iBADpD,oBADP,uCACRC,IADQ,kBACRA,IADQ,CAKhBf,SAAS,CAACe,IAAI,CAAChB,MAAN,CAAT,CALgB,sDAAH,kBAAXW,CAAAA,WAAW,2CAAjB,CAQAf,SAAS,CAAC,UAAM,CACZe,WAAW,GACX,MAAO,WAAM,CACTV,SAAS,CAAC,EAAD,CAAT,CACH,CAFD,CAGA;AACH,CANQ,CAMN,EANM,CAAT,CASF,mBACE,aAAK,KAAK,CAAE,CAAEgB,OAAO,CAAE,OAAX,CAAoBC,UAAU,CAAE,MAAhC,CAAZ,WACMpB,cAAc,EACZA,cAAc,CAACqB,GAAf,CAAmB,SAACd,KAAD,qBACf,KAAC,IAAD,EACI,KAAK,CAAEA,KAAK,CAACe,IADjB,CAEI,KAAK,CAAE,CAACC,MAAM,CAAE,CAAT,CAFX,CAGI,IAAI,CAAC,OAHT,CAII,KAAK,CAAC,WAJV,CAMI,SAAS,KANb,CAOI,QAAQ,CAAE,0BAAMZ,CAAAA,YAAY,CAACJ,KAAD,CAAlB,EAPd,EAKSA,KAAK,CAACG,EALf,CADe,EAAnB,CAFR,CAaMR,MAAM,EACJA,MAAM,CAACmB,GAAP,CAAW,SAACd,KAAD,qBACP,KAAC,IAAD,EACI,KAAK,CAAEA,KAAK,CAACe,IADjB,CAEI,KAAK,CAAE,CAACC,MAAM,CAAE,CAAT,CAAYC,UAAU,CAAE,OAAxB,CAFX,CAGI,IAAI,CAAC,OAHT,CAKI,SAAS,KALb,CAMI,OAAO,CAAE,yBAAMlB,CAAAA,SAAS,CAACC,KAAD,CAAf,EANb,EAISA,KAAK,CAACG,EAJf,CADO,EAAX,CAdR,GADF,CA2BD,CAlED,CAoEA,cAAeX,CAAAA,MAAf","sourcesContent":["import { Chip } from '@mui/material'\nimport axios from 'axios'\nimport React, { useEffect } from 'react'\n\nconst Genres = ({\n    selectedGenres,\n    setSelectedGenres,\n    genres,\n    setGenres,\n    type,\n    setPage,\n}) => {\n\n    const handleAdd = (genre) => {\n        setSelectedGenres([...selectedGenres, genre]);\n        setGenres(genres.filter((g) => g.id !== genre.id));\n        setPage(1);\n    };\n    const handleRemove = (genre) => {\n        setSelectedGenres(\n            selectedGenres.filter((selected) => selected.id !== genre.id)\n        )\n        setGenres([...genres, genre])\n        setPage(1)\n    }\n\n    const fetchGenres = async () => {\n        const { data } = await axios.get(\n            `https://api.themoviedb.org/3/genre/${type}/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n        )\n\n        setGenres(data.genres)\n    }\n\n    useEffect(() => {\n        fetchGenres();\n        return () => {\n            setGenres({});\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    \n  return (\n    <div style={{ padding: \"6px 0\", fontWeight: \"bold\" }}>\n        { selectedGenres && \n            selectedGenres.map((genre) => (\n                <Chip \n                    label={genre.name} \n                    style={{margin: 2}} \n                    size='small' \n                    color='secondary'\n                    key={genre.id}\n                    clickable\n                    onDelete={() => handleRemove(genre)}\n                />\n        ))}\n        { genres && \n            genres.map((genre) => (\n                <Chip \n                    label={genre.name} \n                    style={{margin: 2, background: 'white'}} \n                    size='small' \n                    key={genre.id}\n                    clickable\n                    onClick={() => handleAdd(genre)}\n                />\n        ))}\n    </div>\n  )\n}\n\nexport default Genres"]},"metadata":{},"sourceType":"module"}