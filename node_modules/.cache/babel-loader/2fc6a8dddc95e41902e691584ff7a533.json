{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/Pages/TV_Series/TV_Series.js\";\n\n// import axios from 'axios'\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Genres from '../../components/Genres';\nimport CustomPagination from '../../components/Pagination/CustomPagination';\nimport SingleContent from '../../components/SingleContent/SingleContent';\nimport useGenres from '../../Hooks/useGenre';\n\nvar TV_Series = function TV_Series() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      content = _useState4[0],\n      setContent = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      numOfPages = _useState6[0],\n      setNumOfPages = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      seletedGenres = _useState8[0],\n      setSeletedGenres = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      genres = _useState10[0],\n      setGenres = _useState10[1];\n\n  var genreforURL = useGenres(seletedGenres);\n\n  var fetchTVSeries = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"https://api.themoviedb.org/3/discover/tv?api_key=\".concat(process.env.REACT_APP_API_KEY, \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=\").concat(page, \"&with_watch_monetization_types=flatrate&with&with_genres=\").concat(genreforURL));\n\n            case 2:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              setContent(data.results);\n              setNumOfPages(data.total_pages);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchTVSeries() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchTVSeries();\n  }, [page, genreforURL]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pageTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"TV Series\"), /*#__PURE__*/React.createElement(Genres, {\n    type: \"tv\",\n    selectedGenres: seletedGenres,\n    setSelectedGenres: setSeletedGenres,\n    genres: genres,\n    setGenres: setGenres,\n    setPage: setPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trending\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, content && content.map(function (c) {\n    return /*#__PURE__*/React.createElement(SingleContent, {\n      key: c.id,\n      id: c.id,\n      poster: c.poster_path,\n      title: c.title || c.name,\n      date: c.first_air_date || c.release_date,\n      media_type: \"tv\",\n      vote_average: c.vote_average,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  })), numOfPages > 1 && /*#__PURE__*/React.createElement(CustomPagination, {\n    setPage: setPage,\n    numOfPages: numOfPages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default TV_Series;","map":{"version":3,"sources":["/Users/chrisvazquez/Documents/GitHub/Entertainment-Center/src/Pages/TV_Series/TV_Series.js"],"names":["axios","React","useEffect","useState","Genres","CustomPagination","SingleContent","useGenres","TV_Series","page","setPage","content","setContent","numOfPages","setNumOfPages","seletedGenres","setSeletedGenres","genres","setGenres","genreforURL","fetchTVSeries","get","process","env","REACT_APP_API_KEY","data","results","total_pages","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":"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","sourcesContent":["// import axios from 'axios'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport Genres from '../../components/Genres'\nimport CustomPagination from '../../components/Pagination/CustomPagination'\nimport SingleContent from '../../components/SingleContent/SingleContent'\nimport useGenres from '../../Hooks/useGenre'\n\nconst TV_Series = () => {\n  const [page, setPage] = useState(1)\n  const [content, setContent] = useState([])\n  const [numOfPages, setNumOfPages] = useState()\n  const [seletedGenres, setSeletedGenres] = useState([])\n  const [genres, setGenres] = useState([])\n  const genreforURL = useGenres(seletedGenres)\n\n  const fetchTVSeries=async () => {\n     const { data } = await axios.get(\n       `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_watch_monetization_types=flatrate&with&with_genres=${genreforURL}`\n      );\n\n      setContent(data.results)\n      setNumOfPages(data.total_pages)\n  };\n\nuseEffect(() => {\n  fetchTVSeries()\n}, [page, genreforURL]);\n\n  return (\n    <div>\n        <span className='pageTitle'>TV Series</span>\n        <Genres\n          type=\"tv\"\n          selectedGenres={seletedGenres}\n          setSelectedGenres={setSeletedGenres}\n          genres={genres}\n          setGenres={setGenres}\n          setPage={setPage}\n        />\n        <div className='trending'>\n          { content && content.map((c) => (\n            <SingleContent \n              key={c.id} \n              id={c.id} \n              poster={c.poster_path} \n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date} \n              media_type=\"tv\"\n              vote_average={c.vote_average}\n              />\n          ))}\n        </div>\n        {numOfPages > 1 &&(\n          <CustomPagination setPage={setPage} numOfPages={numOfPages} /> \n        )}\n    </div>\n  )\n}\n\nexport default TV_Series"]},"metadata":{},"sourceType":"module"}